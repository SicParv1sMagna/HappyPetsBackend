definitions:
  model.Pet:
    properties:
      birthdate:
        type: string
      breed_id:
        type: integer
      color:
        type: string
      created_at:
        type: string
      description:
        type: string
      food:
        type: string
      gender:
        type: string
      id:
        type: integer
      lives_at:
        type: string
      name:
        type: string
      passport_id:
        type: integer
      photos:
        items:
          type: string
        type: array
      spicies:
        type: string
      status:
        type: string
      todo_id:
        type: integer
      weight:
        type: number
    type: object
  model.RemoveImageResponse:
    type: object
  model.UploadImageResponse:
    properties:
      imageURL:
        type: string
      message:
        type: string
    type: object
  model.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      repeat_password:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/image/remove/{userID}/{petID}:
    delete:
      consumes:
      - application/json
      description: Removes an image for a specific pet associated with a user.
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Pet ID
        in: path
        name: petID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Image removed successfully
          schema:
            $ref: '#/definitions/model.RemoveImageResponse'
        "400":
          description: Bad request, invalid input data
          schema:
            $ref: '#/definitions/model.RemoveImageResponse'
        "404":
          description: Image not found
          schema:
            $ref: '#/definitions/model.RemoveImageResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.RemoveImageResponse'
      summary: Removes an image for a specific pet associated with a user.
      tags:
      - Image
  /api/image/upload/{userID}/{petID}:
    post:
      consumes:
      - multipart/form-data
      description: Uploads an image for a specific pet associated with a user.
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Pet ID
        in: path
        name: petID
        required: true
        type: string
      - description: Image file
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Image uploaded successfully
          schema:
            $ref: '#/definitions/model.UploadImageResponse'
        "400":
          description: Bad request, invalid input data
          schema:
            $ref: '#/definitions/model.UploadImageResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.UploadImageResponse'
      summary: Uploads an image for a specific pet associated with a user.
      tags:
      - Image
  /api/pet/create:
    post:
      consumes:
      - application/json
      description: Create a new pet with the provided information
      parameters:
      - description: Pet object in JSON format
        in: body
        name: pet
        required: true
        schema:
          $ref: '#/definitions/model.Pet'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created pet
          schema:
            $ref: '#/definitions/model.Pet'
      summary: Create a new pet
      tags:
      - Pet
  /api/user/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided information
      parameters:
      - description: User object in JSON format
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully registered user
          schema:
            $ref: '#/definitions/model.User'
      summary: Register a new user
      tags:
      - User
swagger: "2.0"
